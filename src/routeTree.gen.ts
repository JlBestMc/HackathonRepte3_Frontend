/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthzRouteImport } from './routes/_authz'
import { Route as AuthnRouteImport } from './routes/_authn'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthzMonitorpageRouteImport } from './routes/_authz/monitorpage'

const AuthzDashboardLazyRouteImport = createFileRoute('/_authz/dashboard')()
const AuthnSignUpLazyRouteImport = createFileRoute('/_authn/sign-up')()
const AuthnSignInLazyRouteImport = createFileRoute('/_authn/sign-in')()
const AuthnResetPasswordLazyRouteImport = createFileRoute(
  '/_authn/reset-password',
)()

const AuthzRoute = AuthzRouteImport.update({
  id: '/_authz',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthnRoute = AuthnRouteImport.update({
  id: '/_authn',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthzDashboardLazyRoute = AuthzDashboardLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/dashboard.lazy').then((d) => d.Route),
)
const AuthnSignUpLazyRoute = AuthnSignUpLazyRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/sign-up.lazy').then((d) => d.Route),
)
const AuthnSignInLazyRoute = AuthnSignInLazyRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/sign-in.lazy').then((d) => d.Route),
)
const AuthnResetPasswordLazyRoute = AuthnResetPasswordLazyRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/reset-password.lazy').then((d) => d.Route),
)
const AuthzMonitorpageRoute = AuthzMonitorpageRouteImport.update({
  id: '/monitorpage',
  path: '/monitorpage',
  getParentRoute: () => AuthzRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/monitorpage': typeof AuthzMonitorpageRoute
  '/reset-password': typeof AuthnResetPasswordLazyRoute
  '/sign-in': typeof AuthnSignInLazyRoute
  '/sign-up': typeof AuthnSignUpLazyRoute
  '/dashboard': typeof AuthzDashboardLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/monitorpage': typeof AuthzMonitorpageRoute
  '/reset-password': typeof AuthnResetPasswordLazyRoute
  '/sign-in': typeof AuthnSignInLazyRoute
  '/sign-up': typeof AuthnSignUpLazyRoute
  '/dashboard': typeof AuthzDashboardLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authn': typeof AuthnRouteWithChildren
  '/_authz': typeof AuthzRouteWithChildren
  '/_authz/monitorpage': typeof AuthzMonitorpageRoute
  '/_authn/reset-password': typeof AuthnResetPasswordLazyRoute
  '/_authn/sign-in': typeof AuthnSignInLazyRoute
  '/_authn/sign-up': typeof AuthnSignUpLazyRoute
  '/_authz/dashboard': typeof AuthzDashboardLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/monitorpage'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/monitorpage'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_authn'
    | '/_authz'
    | '/_authz/monitorpage'
    | '/_authn/reset-password'
    | '/_authn/sign-in'
    | '/_authn/sign-up'
    | '/_authz/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthnRoute: typeof AuthnRouteWithChildren
  AuthzRoute: typeof AuthzRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authz': {
      id: '/_authz'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthzRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authn': {
      id: '/_authn'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authz/dashboard': {
      id: '/_authz/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthzDashboardLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authn/sign-up': {
      id: '/_authn/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthnSignUpLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authn/sign-in': {
      id: '/_authn/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthnSignInLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authn/reset-password': {
      id: '/_authn/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthnResetPasswordLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authz/monitorpage': {
      id: '/_authz/monitorpage'
      path: '/monitorpage'
      fullPath: '/monitorpage'
      preLoaderRoute: typeof AuthzMonitorpageRouteImport
      parentRoute: typeof AuthzRoute
    }
  }
}

interface AuthnRouteChildren {
  AuthnResetPasswordLazyRoute: typeof AuthnResetPasswordLazyRoute
  AuthnSignInLazyRoute: typeof AuthnSignInLazyRoute
  AuthnSignUpLazyRoute: typeof AuthnSignUpLazyRoute
}

const AuthnRouteChildren: AuthnRouteChildren = {
  AuthnResetPasswordLazyRoute: AuthnResetPasswordLazyRoute,
  AuthnSignInLazyRoute: AuthnSignInLazyRoute,
  AuthnSignUpLazyRoute: AuthnSignUpLazyRoute,
}

const AuthnRouteWithChildren = AuthnRoute._addFileChildren(AuthnRouteChildren)

interface AuthzRouteChildren {
  AuthzMonitorpageRoute: typeof AuthzMonitorpageRoute
  AuthzDashboardLazyRoute: typeof AuthzDashboardLazyRoute
}

const AuthzRouteChildren: AuthzRouteChildren = {
  AuthzMonitorpageRoute: AuthzMonitorpageRoute,
  AuthzDashboardLazyRoute: AuthzDashboardLazyRoute,
}

const AuthzRouteWithChildren = AuthzRoute._addFileChildren(AuthzRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthnRoute: AuthnRouteWithChildren,
  AuthzRoute: AuthzRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
